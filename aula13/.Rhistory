setwd("~/IMD0601/aula13")
#
# Teoria dos conjuntos em R
#
x <- c(1,3,5,7,13)
y <- c(3,5,7,11)
# uni?o
union(x, y)
# interse??o
intersect(x, y)
# subtra??o de conjunto
setdiff(x, y)
setdiff(y, x)
# testar a igualdade entre conjuntos
setequal(x, y)
# testar se um elemento pertence a um conjunto
el <- 13
set <- x
is.element(el, set)
(el %in% set)
# outros conjuntos para testar as fun??es:
A <- c(3, 5, 7, 11)
B <- c(5, 7, 11, 3)
C <- c(3, 4, 6, 5)
D <- c(3, 5, 7, 11, 13)
E <- c(11, 7, 5, 3)
G <- c(3, 5, 5, 7, 7, 11)
setequal(A, B)
setequal(A, C)
setequal(A, D)
setequal(A, G)
unique(G)
library(dplyr)
# conjunto de todas as prote?nas de drosophila
# e suas anota??es
data <- read.csv("drosophila.tab", sep="\t", na.strings="")
df <- tbl_df(data)
head(df)
str(df)
# De quantas prote?nas o espa?o amostral ? formado?
length(df)
# De quantas prote?nas o espa?o amostral ? formado?
length(df$Entry)
# De quantas prote?nas o espa?o amostral ? formado?
omega <- length(df$Entry)
# Pegando uma prote?na aleat?ria deste conjunto,
# qual a probabilidade de pegar uma que seja transmembrana?
df$Transmembrane
# Pegando uma prote?na aleat?ria deste conjunto,
# qual a probabilidade de pegar uma que seja transmembrana?
is.na(df$Transmembrane)
# Pegando uma prote?na aleat?ria deste conjunto,
# qual a probabilidade de pegar uma que seja transmembrana?
!is.na(df$Transmembrane)
# Pegando uma prote?na aleat?ria deste conjunto,
# qual a probabilidade de pegar uma que seja transmembrana?
sum(!is.na(df$Transmembrane))
# Pegando uma prote?na aleat?ria deste conjunto,
# qual a probabilidade de pegar uma que seja transmembrana?
transm <- sum(!is.na(df$Transmembrane))
transm/omega
# Pegando uma prote?na aleat?ria deste conjunto,
# qual a probabilidade de pegar uma que tenha tamanho maior que 1500?
df$Entry[df$Length > 1500]
# Pegando uma prote?na aleat?ria deste conjunto,
# qual a probabilidade de pegar uma que tenha tamanho maior que 1500?
length(df$Entry[df$Length > 1500])
# Pegando uma prote?na aleat?ria deste conjunto,
# qual a probabilidade de pegar uma que tenha tamanho maior que 1500?
length(df$Entry[df$Length > 1500])/omega
# Qual a probabilidade de eu pegar uma prote?na que seja
# transmembrana ou maior que 1500?
l1500 <- df$Entry[df$Length > 1500]
transm <- df$Entry[!is.na(df$Transmembrane)]
transm
length(union(l1500,transm))
length(union(l1500,transm))/omega
# Qual a probabilidade de eu pegar uma prote?na que seja
# transmembrana e maior que 1500?
length(intersect(l1500,transm))/omega
# Pegando uma prote?na aleat?ria deste conjunto,
# qual a probabilidade de pegar uma que seja transmembrana?
transm <- sum(!is.na(df$Transmembrane))
transm/omega
# Pegando uma prote?na aleat?ria deste conjunto,
# qual a probabilidade de pegar uma que tenha tamanho maior que 1500?
length(df$Entry[df$Length > 1500])/omega
# Qual a probabilidade de eu pegar uma prote?na que
# n?o seja maior que 1500 ou que n?o seja transmembrana?
omegac <- df$Entry
# Qual a probabilidade de eu pegar uma prote?na que seja
# transmembrana ou maior que 1500?
l1500 <- df$Entry[df$Length > 1500]
transm <- df$Entry[!is.na(df$Transmembrane)]
length(union(l1500,transm))/omega
length(setdiff(omegac, union(l1500,transm)))
length(setdiff(omegac, union(l1500,transm)))/omega
# Regra da multiplica??o
# n?mero de combina??es de resultados diferentes
# em experimentos distintos ? o produto do espa?o
# amostral dos experimentos.
dado <- c(1,2,3,4,5,6)
moeda <- c("cara","coroa")
length(dado)*length(moeda)
# Permuta??o com repeti??o
# Situa??o onde repito um experimento n vezes
# repondo a amostra sorteada. O n?mero de permuta??es
# poss?veis ? o tamanho da amostra elevado a n
rep <- 10
length(moeda)**rep
factorial
# permuta??o simples (sem repeti??o)
# fatorial:
factorial(5)
# fun??o gamma()
# em R, podemos obter o fatorial de um n?mero utilizando a
# fun??o gamma(), onde gamma(x) = (x - 1)!
n <- 5
gamma(n+1)
gamma(n+1)/gamma(n-v+1)
factorial(n)/factorial(n-v)
# n?mero de arranjos de um conjunto de 5 elementos, 2 a 2
n <- 5
v <- 2
gamma(n+1)/gamma(n-v+1)
factorial(n)/factorial(n-v)
# n?mero de combina??es sem repeti??o
choose(4,3)
# n?mero de combina??es com repeti??o
# n?mero de solu??es poss?veis para x1 + x2 + x3 = 7, considerando
# que x1, x2 e x3 sejam n?meros inteiros.
n <- 7
r <- 3
choose(r + n - 1, r)
choose(r + n - 1, r -1)
choose(9,2)
choose(9,7)
